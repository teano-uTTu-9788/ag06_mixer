# Multi-stage build for AiOke production deployment
# Following Google Cloud best practices

# Stage 1: Build dependencies
FROM python:3.11-slim as builder

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    make \
    libffi-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements
COPY requirements.txt .
RUN pip install --user --no-cache-dir -r requirements.txt

# Stage 2: Production image
FROM python:3.11-slim

# Create non-root user for security
RUN useradd -m -u 1000 aioke && \
    mkdir -p /app && \
    chown -R aioke:aioke /app

WORKDIR /app

# Copy Python dependencies from builder
COPY --from=builder --chown=aioke:aioke /root/.local /home/aioke/.local

# Copy application code
COPY --chown=aioke:aioke . .

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ffmpeg \
    && rm -rf /var/lib/apt/lists/*

# Switch to non-root user
USER aioke

# Add local pip packages to PATH
ENV PATH=/home/aioke/.local/bin:$PATH
ENV PYTHONPATH=/app:$PYTHONPATH

# Port configuration
ENV PORT=8080
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD python -c "import requests; requests.get('http://localhost:8080/health')"

# Start production server
CMD ["python", "aioke_production_server.py"]