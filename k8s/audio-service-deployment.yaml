# Kubernetes deployment for audio processing service
# Following Google GKE best practices
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audio-processing-service
  namespace: ag06-mixer
  labels:
    app: audio-processing
    version: v1
    tier: backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: audio-processing
  template:
    metadata:
      labels:
        app: audio-processing
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: audio-processing
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
      - name: audio-processor
        image: gcr.io/ag06-mixer/audio-processing:v1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - name: grpc
          containerPort: 50051
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        - name: health
          containerPort: 8080
          protocol: TCP
        env:
        - name: GRPC_PORT
          value: "50051"
        - name: METRICS_PORT
          value: "9090"
        - name: LOG_LEVEL
          value: "INFO"
        # Feature flags for gradual rollout
        - name: FF_AI_MIXING_V2
          value: "0.2"  # 20% rollout
        - name: FF_ADVANCED_EFFECTS
          value: "1.0"  # 100% enabled
        - name: FF_ML_GENRE
          value: "0.5"  # 50% rollout
        - name: FF_STEREO
          value: "0.1"  # 10% rollout
        # OpenTelemetry configuration
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://otel-collector:4317"
        - name: OTEL_SERVICE_NAME
          value: "audio-processing"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          grpc:
            port: 50051
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          grpc:
            port: 50051
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 2
        startupProbe:
          grpc:
            port: 50051
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 20
        volumeMounts:
        - name: config
          mountPath: /etc/audio-processor
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          capabilities:
            drop:
            - ALL
      volumes:
      - name: config
        configMap:
          name: audio-processor-config
      nodeSelector:
        cloud.google.com/gke-nodepool: audio-processing
      tolerations:
      - key: "audio-processing"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - audio-processing
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: audio-processing-service
  namespace: ag06-mixer
  labels:
    app: audio-processing
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "audio-backend-config"}'
spec:
  type: ClusterIP
  selector:
    app: audio-processing
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: audio-processing-hpa
  namespace: ag06-mixer
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: audio-processing-service
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: audio_processing_duration_seconds
      target:
        type: AverageValue
        averageValue: "0.05"  # 50ms average processing time
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 30
      - type: Pods
        value: 4
        periodSeconds: 30
      selectPolicy: Max
---
# PodDisruptionBudget for high availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: audio-processing-pdb
  namespace: ag06-mixer
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: audio-processing
---
# ServiceMonitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: audio-processing
  namespace: ag06-mixer
spec:
  selector:
    matchLabels:
      app: audio-processing
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics