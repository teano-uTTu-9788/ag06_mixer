apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: aioke-2025-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization"
spec:
  tls:
  - hosts:
    - api.aioke2025.com
    secretName: aioke-2025-tls
  rules:
  - host: api.aioke2025.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: aioke-2025-service
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: aioke-2025-nodeport
  namespace: production
  labels:
    app: aioke-2025
spec:
  type: NodePort
  selector:
    app: aioke-2025
  ports:
  - port: 80
    targetPort: 8888
    nodePort: 30080
    protocol: TCP
    name: http
---
apiVersion: v1
kind: Service
metadata:
  name: aioke-2025-loadbalancer
  namespace: production
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
  labels:
    app: aioke-2025
spec:
  type: LoadBalancer
  selector:
    app: aioke-2025
  ports:
  - port: 80
    targetPort: 8888
    protocol: TCP
    name: http
  - port: 443
    targetPort: 8888
    protocol: TCP
    name: https