openapi: 3.0.3
info:
  title: Aioke Advanced Enterprise API
  description: |
    Production-grade implementation of advanced enterprise patterns from 8 leading technology companies.
    
    ## Enterprise Patterns
    - **Google Borg/Kubernetes** - Resource scheduling and job management
    - **Meta Hydra** - Hierarchical configuration management
    - **Amazon Cells** - Cell-based architecture with fault isolation
    - **Microsoft Dapr** - Sidecar pattern with virtual actors
    - **Uber Cadence** - Workflow orchestration with durable execution
    - **LinkedIn Kafka** - Stream processing with partitions
    - **Twitter Finagle** - RPC framework with circuit breakers
    - **Airbnb Airflow** - DAG orchestration with task dependencies
    
    ## Test Compliance
    - Advanced Patterns: 88/88 tests passing (100%)
    - Enterprise Implementation: 88/88 tests passing (100%)
    - Total Compliance: 176/176 tests (100%)
  version: 3.0.0
  contact:
    name: Aioke Team
    url: https://github.com/teano-uTTu-9788/ag06_mixer
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Local development server
  - url: https://api.aioke-enterprise.com
    description: Production server

tags:
  - name: Health
    description: System health and monitoring endpoints
  - name: Metrics
    description: Performance and operational metrics
  - name: Status
    description: Component status information

paths:
  /health:
    get:
      tags:
        - Health
      summary: Get system health status
      description: Returns current system health metrics including uptime, event counts, and processing status
      operationId: getHealth
      responses:
        '200':
          description: System health information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
              example:
                status: "healthy"
                uptime: 54720.5
                total_events: 510899
                error_count: 0
                processing: true
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /metrics:
    get:
      tags:
        - Metrics
      summary: Get detailed system metrics
      description: Returns comprehensive metrics for all system components including Borg, Cells, Kafka, and more
      operationId: getMetrics
      responses:
        '200':
          description: Detailed metrics data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
              example:
                timestamp: "2025-08-26T10:30:00.000Z"
                uptime: 54720.5
                events_processed: 510899
                errors: 0
                components:
                  borg:
                    jobs: 4
                    running: 4
                  cells:
                    total: 6
                    healthy: 6
                  workflows:
                    active: 2
                  services:
                    finagle: "healthy"
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /status:
    get:
      tags:
        - Status
      summary: Get component status
      description: Returns operational status of all enterprise pattern implementations
      operationId: getStatus
      responses:
        '200':
          description: Component status information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              example:
                system: "Aioke Advanced Enterprise"
                version: "3.0.0"
                status: "operational"
                timestamp: "2025-08-26T10:30:00.000Z"
                patterns:
                  google_borg: "active"
                  meta_hydra: "configured"
                  amazon_cells: "distributed"
                  microsoft_dapr: "running"
                  uber_cadence: "orchestrating"
                  linkedin_kafka: "streaming"
                  twitter_finagle: "serving"
                  airbnb_airflow: "scheduling"
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    HealthResponse:
      type: object
      required:
        - status
        - uptime
        - total_events
        - error_count
        - processing
      properties:
        status:
          type: string
          enum: ["healthy", "degraded", "unhealthy"]
          description: Overall system health status
        uptime:
          type: number
          format: float
          description: System uptime in seconds
        total_events:
          type: integer
          format: int64
          description: Total number of events processed
        error_count:
          type: integer
          format: int64
          description: Total number of errors encountered
        processing:
          type: boolean
          description: Whether the system is actively processing events

    MetricsResponse:
      type: object
      required:
        - timestamp
        - uptime
        - events_processed
        - errors
        - components
      properties:
        timestamp:
          type: string
          format: date-time
          description: Timestamp of metrics collection
        uptime:
          type: number
          format: float
          description: System uptime in seconds
        events_processed:
          type: integer
          format: int64
          description: Total events processed
        errors:
          type: integer
          format: int64
          description: Total error count
        components:
          type: object
          properties:
            borg:
              $ref: '#/components/schemas/BorgMetrics'
            cells:
              $ref: '#/components/schemas/CellMetrics'
            workflows:
              $ref: '#/components/schemas/WorkflowMetrics'
            services:
              $ref: '#/components/schemas/ServiceMetrics'

    StatusResponse:
      type: object
      required:
        - system
        - version
        - status
        - timestamp
        - patterns
      properties:
        system:
          type: string
          description: System name
        version:
          type: string
          description: System version
        status:
          type: string
          enum: ["operational", "degraded", "maintenance", "offline"]
          description: Overall operational status
        timestamp:
          type: string
          format: date-time
          description: Status timestamp
        patterns:
          type: object
          properties:
            google_borg:
              type: string
              description: Google Borg/Kubernetes status
            meta_hydra:
              type: string
              description: Meta Hydra configuration status
            amazon_cells:
              type: string
              description: Amazon Cells architecture status
            microsoft_dapr:
              type: string
              description: Microsoft Dapr sidecar status
            uber_cadence:
              type: string
              description: Uber Cadence workflow status
            linkedin_kafka:
              type: string
              description: LinkedIn Kafka streaming status
            twitter_finagle:
              type: string
              description: Twitter Finagle RPC status
            airbnb_airflow:
              type: string
              description: Airbnb Airflow DAG status

    BorgMetrics:
      type: object
      properties:
        jobs:
          type: integer
          description: Total number of jobs
        running:
          type: integer
          description: Number of running jobs
        queued:
          type: integer
          description: Number of queued jobs
        utilization:
          type: number
          format: float
          description: CPU utilization percentage

    CellMetrics:
      type: object
      properties:
        total:
          type: integer
          description: Total number of cells
        healthy:
          type: integer
          description: Number of healthy cells
        degraded:
          type: integer
          description: Number of degraded cells
        regions:
          type: integer
          description: Number of regions

    WorkflowMetrics:
      type: object
      properties:
        active:
          type: integer
          description: Number of active workflows
        completed:
          type: integer
          description: Number of completed workflows
        failed:
          type: integer
          description: Number of failed workflows

    ServiceMetrics:
      type: object
      properties:
        finagle:
          type: string
          description: Finagle service status
        circuit_breakers:
          type: integer
          description: Number of circuit breakers
        open_circuits:
          type: integer
          description: Number of open circuit breakers

    ErrorResponse:
      type: object
      required:
        - error
        - message
        - timestamp
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
        details:
          type: object
          description: Additional error details

  responses:
    ServiceUnavailable:
      description: Service temporarily unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  parameters:
    TimeRange:
      name: timeRange
      in: query
      description: Time range for metrics (e.g., "1h", "24h", "7d")
      required: false
      schema:
        type: string
        default: "1h"
        enum: ["1h", "6h", "12h", "24h", "7d", "30d"]

security:
  - ApiKeyAuth: []
  - BearerAuth: []

externalDocs:
  description: Full documentation
  url: https://github.com/teano-uTTu-9788/ag06_mixer/blob/main/automation-framework/README.md