{
  "timestamp": "2025-08-28 12:32:16",
  "total_tests": 88,
  "passed_tests": 88,
  "failed_tests": 0,
  "success_rate": 100.0,
  "failed_test_numbers": [],
  "all_results": [
    {
      "test_number": 1,
      "description": "Main dev CLI script exists",
      "passed": true,
      "details": "File exists: dev"
    },
    {
      "test_number": 2,
      "description": "Core library exists",
      "passed": true,
      "details": "File exists: scripts/lib/core.sh"
    },
    {
      "test_number": 3,
      "description": "Homebrew library exists",
      "passed": true,
      "details": "File exists: scripts/lib/homebrew.sh"
    },
    {
      "test_number": 4,
      "description": "Git library exists",
      "passed": true,
      "details": "File exists: scripts/lib/git.sh"
    },
    {
      "test_number": 5,
      "description": "CI/CD workflow exists",
      "passed": true,
      "details": "File exists: .github/workflows/ci.yml"
    },
    {
      "test_number": 6,
      "description": "BATS test suite exists",
      "passed": true,
      "details": "File exists: tests/framework.bats"
    },
    {
      "test_number": 7,
      "description": "Test runner script exists",
      "passed": true,
      "details": "File exists: test-runner.sh"
    },
    {
      "test_number": 8,
      "description": "Brewfile exists",
      "passed": true,
      "details": "File exists: Brewfile"
    },
    {
      "test_number": 9,
      "description": "Framework README exists",
      "passed": true,
      "details": "File exists: FRAMEWORK_README.md"
    },
    {
      "test_number": 10,
      "description": "Deployment summary exists",
      "passed": true,
      "details": "File exists: DEPLOYMENT_SUMMARY.md"
    },
    {
      "test_number": 11,
      "description": "dev script is executable",
      "passed": true,
      "details": "Command succeeded: test -x dev"
    },
    {
      "test_number": 12,
      "description": "test-runner.sh is executable",
      "passed": true,
      "details": "Command succeeded: test -x test-runner.sh"
    },
    {
      "test_number": 13,
      "description": "fix_homebrew_permissions.sh is executable",
      "passed": true,
      "details": "Command succeeded: test -x fix_homebrew_permissions.sh"
    },
    {
      "test_number": 14,
      "description": "install_dev_tools.sh is executable",
      "passed": true,
      "details": "Command succeeded: test -x install_dev_tools.sh"
    },
    {
      "test_number": 15,
      "description": "Core library is readable",
      "passed": true,
      "details": "Command succeeded: test -r scripts/lib/core.sh"
    },
    {
      "test_number": 16,
      "description": "dev version command works",
      "passed": true,
      "details": "Command succeeded: ./dev version"
    },
    {
      "test_number": 17,
      "description": "dev help command works",
      "passed": true,
      "details": "Command succeeded: ./dev help | grep -q 'USAGE'"
    },
    {
      "test_number": 18,
      "description": "dev doctor command runs",
      "passed": true,
      "details": "Command succeeded: ./dev doctor 2>&1 | grep -q 'health check'"
    },
    {
      "test_number": 19,
      "description": "Invalid command shows error",
      "passed": true,
      "details": ""
    },
    {
      "test_number": 20,
      "description": "Install requires package name",
      "passed": true,
      "details": ""
    },
    {
      "test_number": 21,
      "description": "git:setup requires parameters",
      "passed": true,
      "details": ""
    },
    {
      "test_number": 22,
      "description": "git:branch requires branch name",
      "passed": true,
      "details": ""
    },
    {
      "test_number": 23,
      "description": "Help includes doctor command",
      "passed": true,
      "details": "Command succeeded: ./dev help | grep -q 'doctor'"
    },
    {
      "test_number": 24,
      "description": "Help includes bootstrap command",
      "passed": true,
      "details": "Command succeeded: ./dev help | grep -q 'bootstrap'"
    },
    {
      "test_number": 25,
      "description": "Help includes install command",
      "passed": true,
      "details": "Command succeeded: ./dev help | grep -q 'install'"
    },
    {
      "test_number": 26,
      "description": "Help includes lint command",
      "passed": true,
      "details": "Command succeeded: ./dev help | grep -q 'lint'"
    },
    {
      "test_number": 27,
      "description": "Help includes format command",
      "passed": true,
      "details": "Command succeeded: ./dev help | grep -q 'format'"
    },
    {
      "test_number": 28,
      "description": "Help includes test command",
      "passed": true,
      "details": "Command succeeded: ./dev help | grep -q 'test'"
    },
    {
      "test_number": 29,
      "description": "Help includes ci command",
      "passed": true,
      "details": "Command succeeded: ./dev help | grep -q 'ci'"
    },
    {
      "test_number": 30,
      "description": "Help includes git:setup command",
      "passed": true,
      "details": "Command succeeded: ./dev help | grep -q 'git:setup'"
    },
    {
      "test_number": 31,
      "description": "log_info function exists",
      "passed": true,
      "details": "Command succeeded: bash -c 'source scripts/lib/core.sh && type log_info'"
    },
    {
      "test_number": 32,
      "description": "log_error function exists",
      "passed": true,
      "details": "Command succeeded: bash -c 'source scripts/lib/core.sh && type log_error'"
    },
    {
      "test_number": 33,
      "description": "validate_command function exists",
      "passed": true,
      "details": "Command succeeded: bash -c 'source scripts/lib/core.sh && type validate_command'"
    },
    {
      "test_number": 34,
      "description": "get_os function exists",
      "passed": true,
      "details": "Command succeeded: bash -c 'source scripts/lib/core.sh && type get_os'"
    },
    {
      "test_number": 35,
      "description": "retry function exists",
      "passed": true,
      "details": "Command succeeded: bash -c 'source scripts/lib/core.sh && type retry'"
    },
    {
      "test_number": 36,
      "description": "brew_install function exists",
      "passed": true,
      "details": "Command succeeded: bash -c 'source scripts/lib/homebrew.sh && type brew_install'"
    },
    {
      "test_number": 37,
      "description": "brew_update function exists",
      "passed": true,
      "details": "Command succeeded: bash -c 'source scripts/lib/homebrew.sh && type brew_update'"
    },
    {
      "test_number": 38,
      "description": "git_validate_repo function exists",
      "passed": true,
      "details": "Command succeeded: bash -c 'source scripts/lib/git.sh && type git_validate_repo'"
    },
    {
      "test_number": 39,
      "description": "git_create_branch function exists",
      "passed": true,
      "details": "Command succeeded: bash -c 'source scripts/lib/git.sh && type git_create_branch'"
    },
    {
      "test_number": 40,
      "description": "git_setup_user function exists",
      "passed": true,
      "details": "Command succeeded: bash -c 'source scripts/lib/git.sh && type git_setup_user'"
    },
    {
      "test_number": 41,
      "description": "CI has framework-test job",
      "passed": true,
      "details": "Command succeeded: grep -q 'framework-test' .github/workflows/ci.yml"
    },
    {
      "test_number": 42,
      "description": "CI has shell-quality job",
      "passed": true,
      "details": "Command succeeded: grep -q 'shell-quality' .github/workflows/ci.yml"
    },
    {
      "test_number": 43,
      "description": "CI has integration-tests job",
      "passed": true,
      "details": "Command succeeded: grep -q 'integration-tests' .github/workflows/ci.yml"
    },
    {
      "test_number": 44,
      "description": "CI tests macOS 13",
      "passed": true,
      "details": "Command succeeded: grep -q 'macos-13' .github/workflows/ci.yml"
    },
    {
      "test_number": 45,
      "description": "CI tests macOS 14",
      "passed": true,
      "details": "Command succeeded: grep -q 'macos-14' .github/workflows/ci.yml"
    },
    {
      "test_number": 46,
      "description": "CI tests macOS latest",
      "passed": true,
      "details": "Command succeeded: grep -q 'macos-latest' .github/workflows/ci.yml"
    },
    {
      "test_number": 47,
      "description": "CI includes shellcheck",
      "passed": true,
      "details": "Command succeeded: grep -q 'shellcheck' .github/workflows/ci.yml"
    },
    {
      "test_number": 48,
      "description": "CI includes shfmt",
      "passed": true,
      "details": "Command succeeded: grep -q 'shfmt' .github/workflows/ci.yml"
    },
    {
      "test_number": 49,
      "description": "CI includes caching",
      "passed": true,
      "details": "Command succeeded: grep -q 'cache' .github/workflows/ci.yml"
    },
    {
      "test_number": 50,
      "description": "CI has concurrency control",
      "passed": true,
      "details": "Command succeeded: grep -q 'concurrency' .github/workflows/ci.yml"
    },
    {
      "test_number": 51,
      "description": "Production checklist exists",
      "passed": true,
      "details": "File exists: PRODUCTION_DEPLOYMENT_CHECKLIST.md"
    },
    {
      "test_number": 52,
      "description": "Issues documentation exists",
      "passed": true,
      "details": "File exists: ISSUES_AND_IMPROVEMENTS.md"
    },
    {
      "test_number": 53,
      "description": "Final status report exists",
      "passed": true,
      "details": "File exists: FINAL_FRAMEWORK_STATUS.md"
    },
    {
      "test_number": 54,
      "description": "Team onboarding guide exists",
      "passed": true,
      "details": "File exists: TEAM_ONBOARDING_GUIDE.md"
    },
    {
      "test_number": 55,
      "description": "Next steps plan exists",
      "passed": true,
      "details": "File exists: NEXT_STEPS_ACTION_PLAN.md"
    },
    {
      "test_number": 56,
      "description": "README has quick start section",
      "passed": true,
      "details": "Command succeeded: grep -q 'Quick Start' FRAMEWORK_README.md"
    },
    {
      "test_number": 57,
      "description": "README documents commands",
      "passed": true,
      "details": "Command succeeded: grep -q 'Commands' FRAMEWORK_README.md"
    },
    {
      "test_number": 58,
      "description": "Deployment mentions Google practices",
      "passed": true,
      "details": "Command succeeded: grep -q 'Google' DEPLOYMENT_SUMMARY.md"
    },
    {
      "test_number": 59,
      "description": "Deployment mentions Meta practices",
      "passed": true,
      "details": "Command succeeded: grep -q 'Meta' DEPLOYMENT_SUMMARY.md"
    },
    {
      "test_number": 60,
      "description": "Version 2.0.0 is set in dev script",
      "passed": true,
      "details": "Command succeeded: grep -q '2.0.0' dev"
    },
    {
      "test_number": 61,
      "description": "dev uses strict error handling",
      "passed": true,
      "details": "Command succeeded: grep -q 'set -euo pipefail' dev"
    },
    {
      "test_number": 62,
      "description": "core.sh uses strict error handling",
      "passed": true,
      "details": "Command succeeded: grep -q 'set -euo pipefail' scripts/lib/core.sh"
    },
    {
      "test_number": 63,
      "description": "Error handler function exists",
      "passed": true,
      "details": "Command succeeded: grep -q 'handle_error' scripts/lib/core.sh"
    },
    {
      "test_number": 64,
      "description": "Cleanup function exists",
      "passed": true,
      "details": "Command succeeded: grep -q 'cleanup_on_exit' scripts/lib/core.sh"
    },
    {
      "test_number": 65,
      "description": "Fatal error logging exists",
      "passed": true,
      "details": "Command succeeded: grep -q 'log_fatal' scripts/lib/core.sh"
    },
    {
      "test_number": 66,
      "description": "dev validates commands",
      "passed": true,
      "details": "Command succeeded: grep -q 'validate_command' dev"
    },
    {
      "test_number": 67,
      "description": "File validation exists",
      "passed": true,
      "details": "Command succeeded: grep -q 'validate_file' scripts/lib/core.sh"
    },
    {
      "test_number": 68,
      "description": "Directory validation exists",
      "passed": true,
      "details": "Command succeeded: grep -q 'validate_directory' scripts/lib/core.sh"
    },
    {
      "test_number": 69,
      "description": "Performance timing exists",
      "passed": true,
      "details": "Command succeeded: grep -q 'timer_start' scripts/lib/core.sh"
    },
    {
      "test_number": 70,
      "description": "Progress indication exists",
      "passed": true,
      "details": "Command succeeded: grep -q 'show_spinner' scripts/lib/core.sh"
    },
    {
      "test_number": 71,
      "description": "All libraries source correctly",
      "passed": true,
      "details": "Command succeeded: ./test_integration.sh"
    },
    {
      "test_number": 72,
      "description": "Logging works after sourcing",
      "passed": true,
      "details": "Command succeeded: bash -c 'source scripts/lib/core.sh && log_info test 2>&1 | grep -q INFO'"
    },
    {
      "test_number": 73,
      "description": "OS detection works",
      "passed": true,
      "details": "Command succeeded: bash -c 'source scripts/lib/core.sh && get_os | grep -q macos'"
    },
    {
      "test_number": 74,
      "description": "Architecture detection works",
      "passed": true,
      "details": "Command succeeded: bash -c 'source scripts/lib/core.sh && get_arch | grep -q arm64'"
    },
    {
      "test_number": 75,
      "description": "Version output is correct",
      "passed": true,
      "details": "Command succeeded: ./dev version | grep -q '2.0.0'"
    },
    {
      "test_number": 76,
      "description": "Help output is substantial",
      "passed": true,
      "details": "Command succeeded: ./dev help 2>&1 | wc -l | grep -q -E '[0-9]{2,}'"
    },
    {
      "test_number": 77,
      "description": "Log file is created",
      "passed": true,
      "details": "Command succeeded: test -f automation.log || ./dev doctor 2>&1 >/dev/null; test -f automation.log"
    },
    {
      "test_number": 78,
      "description": "Git validation runs without crash",
      "passed": true,
      "details": "Command succeeded: bash -c 'source scripts/lib/git.sh && git_validate_repo || true'"
    },
    {
      "test_number": 79,
      "description": "Homebrew installer function exists",
      "passed": true,
      "details": "Command succeeded: bash -c 'source scripts/lib/homebrew.sh && type install_homebrew'"
    },
    {
      "test_number": 80,
      "description": "Homebrew cleanup function exists",
      "passed": true,
      "details": "Command succeeded: bash -c 'source scripts/lib/homebrew.sh && type brew_cleanup'"
    },
    {
      "test_number": 81,
      "description": "Google practices mentioned in dev",
      "passed": true,
      "details": "Command succeeded: grep -q 'Google' dev"
    },
    {
      "test_number": 82,
      "description": "Meta practices mentioned in dev",
      "passed": true,
      "details": "Command succeeded: grep -q 'Meta' dev"
    },
    {
      "test_number": 83,
      "description": "ShellCheck integration present",
      "passed": true,
      "details": "Command succeeded: grep -q 'shellcheck' dev"
    },
    {
      "test_number": 84,
      "description": "shfmt integration present",
      "passed": true,
      "details": "Command succeeded: grep -q 'shfmt' dev"
    },
    {
      "test_number": 85,
      "description": "Uses readonly variables",
      "passed": true,
      "details": "Command succeeded: grep -q 'readonly' scripts/lib/core.sh"
    },
    {
      "test_number": 86,
      "description": "Functions are exported",
      "passed": true,
      "details": "Command succeeded: grep -q 'export -f' scripts/lib/core.sh"
    },
    {
      "test_number": 87,
      "description": "dev has shebang",
      "passed": true,
      "details": "Command succeeded: grep -q '#!/' dev"
    },
    {
      "test_number": 88,
      "description": "core.sh has shebang",
      "passed": true,
      "details": "Command succeeded: grep -q '#!/' scripts/lib/core.sh"
    }
  ]
}