name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, master]

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      shell: ${{ steps.changes.outputs.shell }}
      python: ${{ steps.changes.outputs.python }}
      docs: ${{ steps.changes.outputs.docs }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            shell:
              - 'scripts/**/*.sh'
              - 'dev'
              - 'Brewfile'
            python:
              - 'python/**'
            docs:
              - '*.md'
              - 'docs/**'

  shell-checks:
    needs: changes
    if: needs.changes.outputs.shell == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Install ShellCheck
        run: sudo apt-get update && sudo apt-get install -y shellcheck
        
      - name: Install shfmt
        run: |
          curl -sSLo /tmp/shfmt https://github.com/mvdan/sh/releases/download/v3.7.0/shfmt_v3.7.0_linux_amd64
          sudo mv /tmp/shfmt /usr/local/bin/shfmt
          sudo chmod +x /usr/local/bin/shfmt
          
      - name: Run ShellCheck
        run: |
          find . -type f -name "*.sh" -o -name "dev" | grep -v ".venv" | xargs shellcheck -f gcc
          
      - name: Check formatting
        run: shfmt -d -i 2 -ci scripts dev

  python-checks:
    needs: changes
    if: needs.changes.outputs.python == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          
      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
        
      - name: Install dependencies
        working-directory: python
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          uv venv
          uv sync
          
      - name: Lint with ruff
        working-directory: python
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          uv run ruff check . --output-format=github
          
      - name: Type check with mypy
        working-directory: python
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          uv run mypy .
          
      - name: Test with pytest
        working-directory: python
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          uv run pytest --cov=src --cov-report=xml
          
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          file: python/coverage.xml
          fail_ci_if_error: false

  integration:
    needs: [changes, shell-checks, python-checks]
    if: always() && !cancelled()
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Homebrew
        uses: Homebrew/actions/setup-homebrew@master
        
      - name: Setup Python + uv
        uses: astral-sh/setup-uv@v3
        
      - name: Run integration test
        run: |
          ./dev doctor
          if [[ -f "python/pyproject.toml" ]]; then
            ./dev bootstrap
            ./dev test
          fi
          
  auto-merge:
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
    needs: [shell-checks, python-checks, integration]
    runs-on: ubuntu-latest
    steps:
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}