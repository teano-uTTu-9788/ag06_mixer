name: Deploy Aioke

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

# Permissions for OIDC authentication
permissions:
  id-token: write
  contents: read
  packages: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flask flask-cors numpy
    
    - name: Run 88/88 behavioral tests
      run: |
        python complete_88_behavioral_tests.py
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          ACCURATE_TEST_RESULTS_REPORT.md
          FINAL_88_TEST_COMPLIANCE_REPORT.md

  build-docker:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository }}/aioke:latest
          ghcr.io/${{ github.repository }}/aioke:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-azure:
    needs: build-docker
    runs-on: ubuntu-latest
    environment: production
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    # OIDC Login to Azure - No secrets required!
    - name: Azure Login with OIDC
      uses: azure/login@v2
      with:
        client-id: ${{ vars.AZURE_CLIENT_ID }}
        tenant-id: ${{ vars.AZURE_TENANT_ID }}
        subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
    
    - name: Deploy to Azure Container Apps
      run: |
        # Deploy using the image we just built
        az containerapp update \
          --name aioke \
          --resource-group rg-aioke \
          --image ghcr.io/${{ github.repository }}/aioke:${{ github.sha }}
    
    - name: Verify deployment
      run: |
        # Get the app URL
        APP_URL=$(az containerapp show \
          --name aioke \
          --resource-group rg-aioke \
          --query properties.configuration.ingress.fqdn -o tsv)
        
        echo "Application deployed to: https://${APP_URL}"
        
        # Health check
        curl -f "https://${APP_URL}/health" || exit 1

  deploy-vercel:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Vercel CLI
      run: npm install --global vercel@latest
    
    - name: Deploy to Vercel
      run: |
        cd webapp
        vercel deploy --prod --yes --token=${{ secrets.VERCEL_TOKEN }}
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

  notify:
    needs: [deploy-azure, deploy-vercel]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Send deployment notification
      uses: actions/github-script@v7
      with:
        script: |
          const status = '${{ needs.deploy-azure.result }}' === 'success' && 
                         '${{ needs.deploy-vercel.result }}' === 'success' 
                         ? '✅ Success' : '❌ Failed';
          
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number || 1,
            body: `## Deployment Status: ${status}
            
            - Azure Backend: ${{ needs.deploy-azure.result }}
            - Vercel Frontend: ${{ needs.deploy-vercel.result }}
            - Commit: ${{ github.sha }}
            - Workflow: ${{ github.run_id }}
            `
          });