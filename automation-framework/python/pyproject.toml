[project]
name = "aican-automation"
version = "0.1.0"
description = "AI-enhanced terminal automation framework"
requires-python = ">=3.11"
dependencies = [
    "requests>=2.31.0",
    "click>=8.1.0",
    "rich>=13.7.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.6.0",
    "mypy>=1.8.0",
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "types-requests>=2.31.0",
]

[project.scripts]
aican = "aican.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/aican"]

[tool.ruff]
line-length = 100
target-version = "py311"
extend-select = ["E", "F", "I", "UP", "B", "SIM", "FURB", "Q"]
ignore = ["E501"]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.isort]
known-first-party = ["aican"]

[tool.pytest.ini_options]
addopts = "-q -ra --cov=src --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]

[tool.mypy]
python_version = "3.11"
strict = true
pretty = true
show_error_codes = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "src/aican/__main__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]