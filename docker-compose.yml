version: '3.8'

services:
  ag06-mixer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ag06-mixer-app
    restart: unless-stopped
    ports:
      - "8000:8000"  # Main application
      - "8080:8080"  # Monitoring dashboard
      - "9090:9090"  # Metrics endpoint
    environment:
      - AG06_ENV=production
      - AG06_LOG_LEVEL=INFO
      - AG06_MONITORING_ENABLED=true
      - AG06_METRICS_ENABLED=true
    volumes:
      - ./presets:/app/presets
      - ./logs:/app/logs
      - ag06-data:/app/data
    networks:
      - ag06-network
    healthcheck:
      test: ["CMD", "python3", "-c", "import requests; requests.get('http://localhost:8080/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  monitoring:
    image: prom/prometheus:latest
    container_name: ag06-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - ag06-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    container_name: ag06-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=ag06admin
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
    networks:
      - ag06-network
    depends_on:
      - monitoring

  redis:
    image: redis:alpine
    container_name: ag06-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - ag06-network
    command: redis-server --appendonly yes

volumes:
  ag06-data:
  prometheus-data:
  grafana-data:
  redis-data:

networks:
  ag06-network:
    driver: bridge